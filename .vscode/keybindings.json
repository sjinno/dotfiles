// Place your key bindings in this file to override the defaults
[
    {
        "command": "editor.action.addSelectionToPreviousFindMatch",
        "key": "ctrl+alt+p"
    },
    {
        "command": "editor.action.transformToUppercase",
        "key": "alt+u",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.transformToLowercase",
        "key": "alt+l",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "editor.action.selectHighlights",
        "key": "ctrl+alt+l",
        "when": "editorFocus"
    },
    {
        "command": "-editor.action.selectHighlights",
        "key": "ctrl+shift+l",
        "when": "editorFocus"
    },
    {
        "command": "redo",
        "key": "ctrl+\\"
    },
    {
        "command": "-redo",
        "key": "ctrl+y"
    },
    {
        "command": "editor.action.clipboardCutAction",
        "key": "ctrl+w"
    },
    {
        "command": "-editor.action.clipboardCutAction",
        "key": "ctrl+x"
    },
    {
        "command": "editor.action.clipboardPasteAction",
        "key": "ctrl+y"
    },
    {
        "command": "-editor.action.clipboardPasteAction",
        "key": "ctrl+v"
    },
    {
        "command": "editor.action.blockComment",
        "key": "ctrl+alt+;",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "-editor.action.blockComment",
        "key": "ctrl+shift+a",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
        "key": "ctrl+right"
    },
    {
        "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
        "key": "ctrl+tab"
    },
    {
        "command": "-cursorWordEndRight",
        "key": "ctrl+right",
        "when": "textInputFocus"
    },
    {
        "command": "workbench.action.previousEditor",
        "key": "ctrl+left"
    },
    {
        "command": "-workbench.action.previousEditor",
        "key": "ctrl+pageup"
    },
    {
        "command": "workbench.action.nextEditor",
        "key": "ctrl+right"
    },
    {
        "command": "-workbench.action.nextEditor",
        "key": "ctrl+pagedown"
    },
    {
        "command": "-deleteLeft",
        "key": "ctrl+h",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "-editor.action.startFindReplaceAction",
        "key": "ctrl+h",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "command": "workbench.action.toggleSidebarVisibility",
        "key": "alt+space"
    },
    {
        "command": "-workbench.action.toggleSidebarVisibility",
        "key": "ctrl+b"
    },
    {
        "command": "workbench.action.terminal.toggleTerminal",
        "key": "ctrl+pagedown",
        "when": "terminal.active"
    },
    {
        "command": "-workbench.action.terminal.toggleTerminal",
        "key": "ctrl+`",
        "when": "terminal.active"
    },
    {
        "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
        "key": "ctrl+tab",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "command": "workbench.action.closeWindow",
        "key": "ctrl+x k",
        "when": "!editorIsOpen"
    },
    {
        "command": "-workbench.action.closeWindow",
        "key": "ctrl+x k",
        "when": "!editorIsOpen"
    },
    {
        "command": "-workbench.action.closeWindow",
        "key": "ctrl+shift+w"
    },
    {
        "command": "workbench.action.closeActiveEditor",
        "key": "ctrl+shift+w"
    },
    {
        "command": "-workbench.action.closeActiveEditor",
        "key": "ctrl+w"
    },
    {
        "command": "-notebook.cell.split",
        "key": "ctrl+shift+-",
        "when": "editorTextFocus && inputFocus && notebookEditorFocused"
    },
    {
        "command": "-emacs.C-/",
        "key": "ctrl+shift+-",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "workbench.action.navigateForward",
        "key": "ctrl+shift+]"
    },
    {
        "command": "-workbench.action.navigateForward",
        "key": "ctrl+shift+-"
    },
    {
        "command": "workbench.action.navigateBack",
        "key": "ctrl+shift+["
    },
    {
        "command": "-workbench.action.navigateBack",
        "key": "ctrl+alt+-"
    },
    {
        "command": "-editor.unfold",
        "key": "ctrl+shift+]",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "-editor.fold",
        "key": "ctrl+shift+[",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "command": "editor.action.clipboardCopyAction",
        "key": "alt+w"
    },
    {
        "command": "-editor.action.clipboardCopyAction",
        "key": "ctrl+c"
    },
    {
        "command": "-workbench.action.zoomIn",
        "key": "ctrl+shift+="
    },
    {
        "command": "editor.action.fontZoomIn",
        "key": "ctrl+shift+="
    },
    {
        "command": "editor.action.fontZoomOut",
        "key": "ctrl+shift+-"
    },
    {
        "command": "editor.action.fontZoomReset",
        "key": "ctrl+shift+0"
    },
    {
        "command": "-workbench.action.reopenClosedEditor",
        "key": "ctrl+shift+t"
    },
    {
        "command": "editor.action.inspectTMScopes",
        "key": "ctrl+shift+t"
    },
    {
        "key": "ctrl+alt+space",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+alt+space",
        "command": "-toggleSuggestionFocus",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.closeMessages",
        "when": "globalMessageVisible"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.closeMessages",
        "when": "globalMessageVisible"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+shift+g",
        "command": "closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+g",
        "command": "-closeFindWidget",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+s",
        "command": "-workbench.action.files.saveAs"
    },
    {
        "key": "ctrl+shift+s",
        "command": "-workbench.action.files.saveLocalFile",
        "when": "remoteFileDialogVisible"
    },
    {
        "key": "ctrl+shift+s",
        "command": "git.stageSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+k ctrl+alt+s",
        "command": "-git.stageSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+shift+r",
        "command": "-editor.action.refactor",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+r",
        "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker"
    },
    {
        "key": "ctrl+shift+r",
        "command": "-rerunSearchEditorSearch",
        "when": "inSearchEditor"
    },
    {
        "key": "ctrl+shift+r",
        "command": "git.revertSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+k ctrl+r",
        "command": "-git.revertSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+shift+p",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "ctrl+shift+p",
        "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+shift+p",
        "command": "editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+f",
        "command": "-editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    }
]
