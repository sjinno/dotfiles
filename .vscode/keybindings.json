// Place your key bindings in this file to override the defaults
[
    {
        "key": "ctrl+alt+p",
        "command": "editor.action.addSelectionToPreviousFindMatch"
    },
    {
        "key": "alt+u",
        "command": "editor.action.transformToUppercase",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+l",
        "command": "editor.action.transformToLowercase",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+l",
        "command": "editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+\\",
        "command": "redo"
    },
    {
        "key": "ctrl+y",
        "command": "-redo"
    },
    {
        "key": "ctrl+w",
        "command": "editor.action.clipboardCutAction"
    },
    {
        "key": "ctrl+x",
        "command": "-editor.action.clipboardCutAction"
    },
    {
        "key": "ctrl+y",
        "command": "editor.action.clipboardPasteAction"
    },
    {
        "key": "ctrl+v",
        "command": "-editor.action.clipboardPasteAction"
    },
    {
        "key": "ctrl+alt+;",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+right",
        "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+right",
        "command": "-cursorWordEndRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+left",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "ctrl+pageup",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "ctrl+right",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "ctrl+h",
        "command": "-deleteLeft",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+b",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+pagedown",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "ctrl+x k",
        "command": "workbench.action.closeWindow",
        "when": "!editorIsOpen"
    },
    {
        "key": "ctrl+x k",
        "command": "-workbench.action.closeWindow",
        "when": "!editorIsOpen"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "ctrl+shift+w",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-notebook.cell.split",
        "when": "editorTextFocus && inputFocus && notebookEditorFocused"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-emacs.C-/",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+]",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-workbench.action.navigateForward"
    },
    {
        "key": "ctrl+shift+[",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "ctrl+alt+-",
        "command": "-workbench.action.navigateBack"
    },
    {
        "key": "ctrl+shift+]",
        "command": "-editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+[",
        "command": "-editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+w",
        "command": "editor.action.clipboardCopyAction"
    },
    {
        "key": "ctrl+c",
        "command": "-editor.action.clipboardCopyAction"
    },
    {
        "key": "ctrl+shift+=",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "ctrl+shift+=",
        "command": "editor.action.fontZoomIn"
    },
    {
        "key": "ctrl+shift+-",
        "command": "editor.action.fontZoomOut"
    },
    {
        "key": "ctrl+shift+0",
        "command": "editor.action.fontZoomReset"
    },
    {
        "key": "ctrl+shift+t",
        "command": "-workbench.action.reopenClosedEditor"
    },
    {
        "key": "ctrl+shift+t",
        "command": "editor.action.inspectTMScopes"
    }
]
